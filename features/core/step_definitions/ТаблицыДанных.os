// Реализация шагов BDD-фич/сценариев c помощью фреймворка https://github.com/artbear/1bdd

Перем БДД; //контекст фреймворка 1bdd

// Метод выдает список шагов, реализованных в данном файле-шагов
Функция ПолучитьСписокШагов(КонтекстФреймворкаBDD) Экспорт
	БДД = КонтекстФреймворкаBDD;

	ВсеШаги = Новый Массив;

	ВсеШаги.Добавить("ЯПередаюТаблицу");
	ВсеШаги.Добавить("ПереданнаяТаблицаЯвляетсяТипом");
	ВсеШаги.Добавить("УПереданнойТаблицыКолонки");
	ВсеШаги.Добавить("УПереданнойТаблицыСтроки");
	ВсеШаги.Добавить("УСтрокиТаблицыЗаданыЗначенияИ");
	ВсеШаги.Добавить("ВТаблицеВЯчейкеЗначениеИмеетТип");
	ВсеШаги.Добавить("ВТаблицеВЯчейкеУказаноЗначение");

	Возврат ВсеШаги;
КонецФункции

// Реализация шагов

// Процедура выполняется перед запуском каждого сценария
Процедура ПередЗапускомСценария(Знач Узел) Экспорт

КонецПроцедуры

// Процедура выполняется после завершения каждого сценария
Процедура ПослеЗапускаСценария(Знач Узел) Экспорт

КонецПроцедуры

//я передаю таблицу
Процедура ЯПередаюТаблицу(Знач ИсходнаяТаблица) Экспорт
	БДД.СохранитьВКонтекст("ТаблицаДанных", ИсходнаяТаблица);
КонецПроцедуры

//переданная таблица является типом "ТаблицаЗначений"
Процедура ПереданнаяТаблицаЯвляетсяТипом(Знач ТипСтрокой) Экспорт
	Таблица = БДД.ПолучитьИзКонтекста("ТаблицаДанных");
	Ожидаем.Что(Таблица).ИмеетТип(ТипСтрокой);
КонецПроцедуры

//у переданной таблицы 2 колонки
Процедура УПереданнойТаблицыКолонки(Знач ОжидаемоеКоличество) Экспорт
	Таблица = БДД.ПолучитьИзКонтекста("ТаблицаДанных");
	Ожидаем.Что(Таблица.Колонки).ИмеетДлину(ОжидаемоеКоличество);
КонецПроцедуры

//у переданной таблицы 2 строки
Процедура УПереданнойТаблицыСтроки(Знач ОжидаемоеКоличество) Экспорт
	Таблица = БДД.ПолучитьИзКонтекста("ТаблицаДанных");
	Ожидаем.Что(Таблица).ИмеетДлину(ОжидаемоеКоличество);
КонецПроцедуры

//у 1 строки таблицы заданы значения "Ячейка11" и "Ячейка12"
Процедура УСтрокиТаблицыЗаданыЗначенияИ(Знач НомерСтроки, Знач ОжидаемоеЗначение0, Знач ОжидаемоеЗначение1) Экспорт
	Таблица = БДД.ПолучитьИзКонтекста("ТаблицаДанных");
	СтрокаТаблицы = Таблица[НомерСтроки];
	Ожидаем.Что(СтрокаТаблицы[0], "СтрокаТаблицы[0]").Равно(ОжидаемоеЗначение0);
	Ожидаем.Что(СтрокаТаблицы[1], "СтрокаТаблицы[1]").Равно(ОжидаемоеЗначение1);
КонецПроцедуры

//в таблице в ячейке "R:C" значение имеет тип "Дата"
Процедура ВТаблицеВЯчейкеЗначениеИмеетТип(Ячейка, ТипСтрокой) Экспорт
	Ожидаем.Что(ЗначениеВЯчейкеТаблицы(Ячейка)).ИмеетТип(ТипСтрокой);
КонецПроцедуры

//в таблице в ячейке "R:C" указано значение 29.11.2020
Процедура ВТаблицеВЯчейкеУказаноЗначение(Ячейка, Значение) Экспорт
	Ожидаем.Что(ЗначениеВЯчейкеТаблицы(Ячейка)).Равно(Значение);
КонецПроцедуры

// Вспомогательный метод
Функция ЗначениеВЯчейкеТаблицы(КоординатыЯчейки)
	ТаблицаДанных = БДД.ПолучитьИзКонтекста("ТаблицаДанных");
	Координаты = СтрРазделить(КоординатыЯчейки, ":");
	НомерСтроки = Число(Координаты[0]);
	НомерКолонки = Число(Координаты[1]);
	Возврат ТаблицаДанных[НомерСтроки][НомерКолонки];
КонецФункции
